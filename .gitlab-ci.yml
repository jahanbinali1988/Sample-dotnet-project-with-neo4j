stages:
  - build
  - build-docker
  - deploy

before_script:
  - date
  - pwd


test:
  stage: build
  services:
  - docker:dind
  image: docker.registry.scratnet.com/dotnet/sdk:5.0
  cache:
    key: nuget_packages
    untracked: true
    paths:
      - .nuget/
  script: 
    - cp ci/nuget.config ./nuget.config
    - dotnet build
    - dotnet test
  only:
    - merge_requests

########################  Sample.Api  ###########################

build_api:
  stage: build
  services:
  - docker:dind
  image: docker.registry.scratnet.com/dotnet/sdk:5.0
  variables:
    PUBLISHPATH: src/Presentation/Sample.Api/publish
    CSPROJECTPATH: src/Presentation/Sample.Api/Sample.Api.csproj
  cache:
    key: nuget_packages
    untracked: true
    paths:
      - .nuget/
  script: 
    - cp ci/nuget.config ./nuget.config
    - https_proxy=http://maryam:W5xpaY69@162.223.94.69:443 dotnet restore $CSPROJECTPATH
#    - dotnet test
    - https_proxy=http://maryam:W5xpaY69@162.223.94.69:443 dotnet new tool-manifest --force
    - https_proxy=http://maryam:W5xpaY69@162.223.94.69:443 dotnet tool install -g dotnet-grpc
    - export PATH="$PATH:/root/.dotnet/tools"
    - dotnet publish $CSPROJECTPATH -c Release -o $PUBLISHPATH
  artifacts:
    when: on_success
    expire_in: 1d
    paths:
      - $PUBLISHPATH
  only:
    - /^v\d{1,6}\.\d{1,6}\.\d{1,6}-nightly-api$/
    - /^v\d{1,6}\.\d{1,6}\.\d{1,6}-api$/

build_api_docker_nightly:
  stage: build-docker
  services:
  - docker:18.09-dind
  image: docker:stable
  variables:
    DOCKER_IMAGE_TAG_PREFIX: neptune/sample-api
    DOCKER_FILE_PATH: src/Presentation/Sample.Api/ci/Dockerfile
  script:
  - docker info
  - docker login -u "$PR_REGISTERY_USER" -p "$PR_REGISTERY_PASS" $PR_REGISTERY_URL 
  - docker build -t "$PR_REGISTERY_URL"/$DOCKER_IMAGE_TAG_PREFIX:"$CI_COMMIT_TAG" -f $DOCKER_FILE_PATH .
  - docker tag "$PR_REGISTERY_URL"/$DOCKER_IMAGE_TAG_PREFIX:"$CI_COMMIT_TAG" "$PR_REGISTERY_URL"/$DOCKER_IMAGE_TAG_PREFIX:nightly-latest
  - docker push "$PR_REGISTERY_URL"/$DOCKER_IMAGE_TAG_PREFIX:"$CI_COMMIT_TAG"
  - docker push "$PR_REGISTERY_URL"/$DOCKER_IMAGE_TAG_PREFIX:nightly-latest
  dependencies:
    - build_api
  only:
    - /^v\d{1,6}\.\d{1,6}\.\d{1,6}-nightly-api$/

build_api_docker:
  stage: build-docker
  services:
  - docker:18.09-dind
  image: docker:stable
  variables:
    DOCKER_IMAGE_TAG_PREFIX: neptune/sample-api
    DOCKER_FILE_PATH: src/Presentation/Sample.Api/ci/Dockerfile
  script:
  - docker info
  - docker login -u "$PR_REGISTERY_USER" -p "$PR_REGISTERY_PASS" $PR_REGISTERY_URL 
  - docker build -t "$PR_REGISTERY_URL"/$DOCKER_IMAGE_TAG_PREFIX:"$CI_COMMIT_TAG" -f $DOCKER_FILE_PATH .
  - docker tag "$PR_REGISTERY_URL"/$DOCKER_IMAGE_TAG_PREFIX:"$CI_COMMIT_TAG" "$PR_REGISTERY_URL"/$DOCKER_IMAGE_TAG_PREFIX:latest
  - docker push "$PR_REGISTERY_URL"/$DOCKER_IMAGE_TAG_PREFIX:"$CI_COMMIT_TAG"
  - docker push "$PR_REGISTERY_URL"/$DOCKER_IMAGE_TAG_PREFIX:latest
  dependencies:
    - build_api
  only:
    - /^v\d{1,6}\.\d{1,6}\.\d{1,6}-api$/

deploy_api_nightly:
  stage: deploy
  services:
  - docker:18.09-dind
  image: docker:stable
  variables:
    DOCKER_IMAGE_TAG_PREFIX: neptune/sample-api
    DOCKER_SWARM_SERVICE_NAME: neptune_sample_api
    DOCKER_HOST: $DOCKER_SWARM_NIGHTLY
  script:
  - docker login -u "$PR_REGISTERY_USER" -p "$PR_REGISTERY_PASS" $PR_REGISTERY_URL
  - docker service update --with-registry-auth  --update-delay=20s --update-parallelism=1 --image "$PR_REGISTERY_URL"/$DOCKER_IMAGE_TAG_PREFIX:"$CI_COMMIT_TAG" $DOCKER_SWARM_SERVICE_NAME
  dependencies:
    - build_api_docker_nightly
  only:
    - /^v\d{1,6}\.\d{1,6}\.\d{1,6}-nightly-api$/

deploy_api:
  stage: deploy
  services:
  - docker:18.09-dind
  image: docker:stable
  variables:
    DOCKER_IMAGE_TAG_PREFIX: neptune/sample-api
    DOCKER_SWARM_SERVICE_NAME: neptune_sample_api
    DOCKER_HOST: $DOCKER_SWARM_MASTER
  script:
  - docker login -u "$PR_REGISTERY_USER" -p "$PR_REGISTERY_PASS" $PR_REGISTERY_URL
  - docker service update --with-registry-auth  --update-delay=20s --update-parallelism=1 --image "$PR_REGISTERY_URL"/$DOCKER_IMAGE_TAG_PREFIX:"$CI_COMMIT_TAG" $DOCKER_SWARM_SERVICE_NAME
  dependencies:
    - build_api_docker
  only:
    - /^v\d{1,6}\.\d{1,6}\.\d{1,6}-api$/