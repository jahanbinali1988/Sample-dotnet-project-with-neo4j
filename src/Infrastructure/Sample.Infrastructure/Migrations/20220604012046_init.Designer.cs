// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Sample.Infrastructure.Persistence;

namespace Sample.Infrastructure.Migrations
{
    [DbContext(typeof(SampleDbContext))]
    [Migration("20220604012046_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Sample.Domain.Currency.CurrencyEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("SYSDATETIMEOFFSET()");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTimeOffset?>("ModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Version")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("Currencies");
                });

            modelBuilder.Entity("Sample.Domain.Currency.CurrencyRate", b =>
                {
                    b.Property<Guid>("DestinationCurrencyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OriginCurrencyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CurrencyEntityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("Rate")
                        .HasColumnType("real");

                    b.HasKey("DestinationCurrencyId", "OriginCurrencyId");

                    b.HasIndex("CurrencyEntityId");

                    b.ToTable("CurrencyRates");
                });

            modelBuilder.Entity("Sample.Domain.Currency.CurrencyRate", b =>
                {
                    b.HasOne("Sample.Domain.Currency.CurrencyEntity", null)
                        .WithMany("CurrencyRates")
                        .HasForeignKey("CurrencyEntityId");
                });

            modelBuilder.Entity("Sample.Domain.Currency.CurrencyEntity", b =>
                {
                    b.Navigation("CurrencyRates");
                });
#pragma warning restore 612, 618
        }
    }
}
